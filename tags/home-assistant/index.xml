<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>home-assistant on Derek Rose: A how to guide for overthiking things.</title><link>https://dereksrose.com/tags/home-assistant/</link><description>Recent content in home-assistant on Derek Rose: A how to guide for overthiking things.</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 18 Jul 2021 14:55:16 -0700</lastBuildDate><atom:link href="https://dereksrose.com/tags/home-assistant/index.xml" rel="self" type="application/rss+xml"/><item><title>MrHomn: Migration to Docker</title><link>https://dereksrose.com/posts/mrhomn-migration-to-docker/</link><pubDate>Sun, 18 Jul 2021 14:55:16 -0700</pubDate><guid>https://dereksrose.com/posts/mrhomn-migration-to-docker/</guid><description>&lt;h1 id="hahahugoshortcode-s0-hbhb">Proxy, Home Assistant and DB&amp;#39;s. Oh my.&lt;/h1>
&lt;p>
&lt;a href="https://dereksrose.com/posts/mrhomn/" title="MrHomn">Last time&lt;/a> on the MrHomn project I talked about wanting to expand my home automation system and deciding to do it via docker-compose. This is mainly because I wanted to learn more about deploying containerized apps using naked docker-compose. The other reason is that I have a lot of spare compute and IO resources on my NAS and docker was the most direct approach to running
&lt;a href="https://www.home-assistant.io/" target="_blank">home assistant&lt;/a> there.&lt;/p>
&lt;figure
style="width: 70%;"
>
&lt;a
data-lightbox="image-/images/mrhomn-migration-to-docker/mrhomn1.png"
href="https://dereksrose.com/images/mrhomn-migration-to-docker/mrhomn1.png"
title=" "
>
&lt;img
src="https://dereksrose.com/images/mrhomn-migration-to-docker/mrhomn1.png"
/>
&lt;/a>
&lt;/figure>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;p>The first step to expanding is getting my existing (and extensive) system migrated from hass os to docker. This means having:&lt;/p>
&lt;ul>
&lt;li>A proxy / router that can serve different containers on different paths&lt;/li>
&lt;li>TLS Certs (LetsEncrypt)&lt;/li>
&lt;li>Home Assistant&lt;/li>
&lt;li>A sql database&lt;/li>
&lt;li>AppDaemon&lt;/li>
&lt;li>Z-Wave JS&lt;/li>
&lt;/ul>
&lt;p>I need to route incoming traffic between nodes in my docker stack via path. My Alexa skill has to be publicly served on port 443 and I don&amp;rsquo;t want to have a second endpoint running, so I am implementing a path based router. I also wanted to handle my TLS cert termination at this layer as I have no need to pass encrypted traffic around inside my docker network.&lt;/p>
&lt;p>I started, as one does, with
&lt;a href="https://hub.docker.com/_/nginx" target="_blank">Nginx&lt;/a>:alpine +
&lt;a href="https://hub.docker.com/r/certbot/certbot" target="_blank">Certbot&lt;/a> in seperate containers and it worked fine, but I didn&amp;rsquo;t like needing to handle certs &amp;ldquo;myself.&amp;rdquo; That certbot container is just one more breakpoint. I thought about going with
&lt;a href="https://nginxproxymanager.com/" target="_blank">nginx proxy manager&lt;/a> because I&amp;rsquo;ve worked with it before and I know it&amp;rsquo;s dead simple to stand up in docker&amp;hellip; but also I&amp;rsquo;ve used it before and this is meant to be a learning experience. So I ended up going with
&lt;a href="https://doc.traefik.io/traefik/" target="_blank">Traefik&lt;/a>.&lt;/p>
&lt;h2 id="compose-file-setup">Compose file setup&lt;/h2>
&lt;p>My full
&lt;a href="https://github.com/Bishma/MrHomn/blob/main/docker-compose.yaml" target="_blank">compose file&lt;/a> is available for review. I&amp;rsquo;ll do my best to explain each service here. This section is going to be dense but hopefully it save someone else some of my debugging time.&lt;/p>
&lt;p>I&amp;rsquo;ll go over each of my starting service definitions and attempt keep line numbers consistent.&lt;/p>
&lt;h3 id="traefik">Traefik&lt;/h3>
&lt;p>Starting with the container basics. I&amp;rsquo;m tagging the current minor version of traefik from docker hub.&lt;/p>
&lt;p>When I was developing I set the log level to debug, but for normal operations I think warning is sufficient. I&amp;rsquo;m also turning on access logs and having them just go to stdout by not specifying an output file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">traefik&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;traefik:v2.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;traefik&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--log.level=WARN&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--api.insecure=true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--accesslog=true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We need to set up the provider now. Obviously we&amp;rsquo;re using docker. I&amp;rsquo;ll be configuring the routers using docker compose labels, so the set up here is pretty simple.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--providers.docker=true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--providers.docker.exposedbydefault=false&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now I want to redirect all port 80 traffic to port 443 via permanent redirect.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--entrypoints.web.address=:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--entrypoints.web.http.redirections.entryPoint.to=websecure&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--entrypoints.web.http.redirections.entryPoint.scheme=https&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--entrypoints.web.http.redirections.entrypoint.permanent=true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now we get to the entry point that matters. This &amp;ldquo;websecure&amp;rdquo; endpoint will handle traffic for both Home Assistant and AppDaemon.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--entrypoints.websecure.address=:443&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--entrypoints.websecure.forwardedHeaders.insecure&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--certificatesresolvers.myresolver.acme.tlschallenge=true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--certificatesresolvers.myresolver.acme.email=me@my.site.com&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The host ports here (8321 and 8322) are here translated back into ports 80 and 443 respectively. I also open up the port to Traefik&amp;rsquo;s UI.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8321:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8322:443&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8080:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In order to get things running I&amp;rsquo;m just going to set up logging as JSON and a short retention. I&amp;rsquo;ll get into more involved logging later&amp;hellip; probably.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;./letsencrypt:/letsencrypt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;/var/run/docker.sock:/var/run/docker.sock:ro&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">driver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">json-file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10m&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="home-assistant">Home Assistant&lt;/h3>
&lt;p>Pretty standard stuff. The important stuff for routing is down at the bottom.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">hass&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">homeassistant&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">homeassistant/home-assistant:2021.7&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=${TZ}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">expose&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">8123&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8123:8123&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./hass:/config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">driver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">json-file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10m&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sql_db&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>First we need to tell Traefik to enable routing to this container, since we turned automatic routing off. Then we&amp;rsquo;re going to define the rules for the websecure endpoint to route to Home Assistant. And we need to tell it to use the Let&amp;rsquo;s Encrypt cert resolver.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.enable=true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.homeassistant.rule=Host(`my.site.com`)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.homeassistant.entrypoints=websecure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.homeassistant.tls.certresolver=myresolver&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.services.homeassistant.loadbalancer.server.port=8123&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="appdaemon">AppDaemon&lt;/h3>
&lt;p>The other docker service that needs to make use of Traefik&amp;rsquo;s websecure endpoint is
&lt;a href="https://appdaemon.readthedocs.io/en/latest/" target="_blank">AppDaemon&lt;/a>. At the moment I&amp;rsquo;m only using AppDaemon for my Alexa skill but I plan to make more APIs and other projects that can make use of the coupling to Home Assistant.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">appdaemon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">appdaemon&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">acockburn/appdaemon:4.0.8&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;5050:5050&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">expose&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">5050&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./appdaemon/config:/conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">driver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">json-file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10m&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hass&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The only difference there, compared to home assistant, is that our routing rule requires both my domain and an API path. This is the patch that Alexa is pointed at.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.enable=true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.appdaemon.rule=(Host(`my.site.com`) &amp;amp;&amp;amp; PathPrefix(`/api/appdaemon/`))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.appdaemon.entrypoints=websecure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.routers.appdaemon.tls.certresolver=myresolver&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">traefik.http.services.appdaemon.loadbalancer.server.port=5050&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="z-wave-js">Z-Wave JS&lt;/h3>
&lt;p>In order to give the Home Assistant Z Wave JS integration a local z wave server to talk to, I&amp;rsquo;m using the zwave2mqtt image. For the time being I have mqtt turned off (via the UI on port 8080), but that will change soon enough.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;span class="lnt">93
&lt;/span>&lt;span class="lnt">94
&lt;/span>&lt;span class="lnt">95
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">zwavejs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">zwavejs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">zwavejs/zwavejs2mqtt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">unless-stopped&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=${TZ}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;8091:8091&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tty&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./zwavejs:/usr/src/app/store&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">devices&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;/dev/ttyACM0:/dev/ttyACM0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">driver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">json-file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10m&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I&amp;rsquo;ve given this service access to my Synology&amp;rsquo;s front USB port since I have a
&lt;a href="https://aeotec.com/z-wave-usb-stick/" target="_blank">Aeotec z-wave usb stick&lt;/a> there.&lt;/p>
&lt;h3 id="sql">SQL&lt;/h3>
&lt;p>I&amp;rsquo;ve gone with MariaDB for SQL. This currently only drives home assistant, but I will soon be restoring some Alexa skill functionality that also requires SQL.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sql_db&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sql_db&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">linuxserver/mariadb&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># https://hub.docker.com/r/linuxserver/mariadb&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">PUID=&amp;#34;${UID}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">PGID=&amp;#34;${GID}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">MYSQL_ROOT_PASSWORD=${MYSQL_ROOT}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">TZ=${TZ}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">MYSQL_DATABASE=hass&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">MYSQL_USER=hass&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">MYSQL_PASSWORD=${MYSQL_PASSWORD}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">expose&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3306&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./sql_db/config:/config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">driver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">json-file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max-size&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10m&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="synology-ip-tables-fix">Synology IP Tables Fix&lt;/h2>
&lt;p>To be honest I don&amp;rsquo;t know enough about networking to know who&amp;rsquo;s ultimately at fault here, but the default interaction between synology and docker keep bridge networks from being able to see real end user IPs. I don&amp;rsquo;t know how many hours I spend messing with proxy protocol settings in nginx and traefik.&lt;/p>
&lt;p>The fix that finally worked was altering my synology&amp;rsquo;s iptables settings. I don&amp;rsquo;t know what good karma finally led me to
&lt;a href="https://gist.github.com/pedrolamas/db809a2b9112166da4a2dbf8e3a72ae9" target="_blank">pedrolamas/docker-iptables-fix.sh&lt;/a>, but it was a turning point for this project.&lt;/p>
&lt;h2 id="the-port-dance">The port dance&lt;/h2>
&lt;p>For the sake of compatibility I need ingressing traffic to come in via public ports 80 and 443 but I&amp;rsquo;m already using these ports (privately) on my host device for unrelated internal traffic routing through nginx. So home automation requests will hit my my WAF on 80/443 and then forward to ports 8321/8322 respectively on my Synology. But then docker is going map those host ports back to 80/443 😕&lt;/p>
&lt;p>To keep it all straight I made a flow chart.&lt;/p>
&lt;figure
>
&lt;a
data-lightbox="image-/images/mrhomn-migration-to-docker/traefik_port_dance.png"
href="https://dereksrose.com/images/mrhomn-migration-to-docker/traefik_port_dance.png"
title=" A diagram of the port flow of incoming web requests."
>
&lt;img
src="https://dereksrose.com/images/mrhomn-migration-to-docker/traefik_port_dance.png"
/>
&lt;/a>
&lt;figcaption>
A diagram of the port flow of incoming web requests.
&lt;/figcaption>
&lt;/figure>
&lt;p>BTW,
&lt;a
data-lightbox="L2ltYWdlcy9tcmhvbW4tbWlncmF0aW9uLXRvLWRvY2tlci9uZ2lueF9wb3J0X2RhbmNlLnBuZw=="
href="https://dereksrose.com/images/mrhomn-migration-to-docker/nginx_port_dance.png"
title="All the routing that nginx needed to also handle certbot."
>this is what it looked like&lt;/a> when I first set it up with Nginx. I don&amp;rsquo;t know why, but having to maintain that extra route for certbot was, if you&amp;rsquo;ll forgive the idiom, a bridge too far.&lt;/p>
&lt;h1 id="the-migration-process">The migration process&lt;/h1>
&lt;p>Now that I&amp;rsquo;m routing I can take down my existing
&lt;a href="https://www.home-assistant.io/installation/" target="_blank">Home Assistant OS&lt;/a> based install and move it over to my docker setup.&lt;/p>
&lt;h2 id="just-the-foundation">Just the foundation&lt;/h2>
&lt;p>I ultimately went with a semi start-over approach. I copied all my yaml files (&lt;code>configuration.yaml&lt;/code>, &lt;code>scripts.yaml&lt;/code>, &lt;code>secrets.yaml&lt;/code>, etc) and the lovelace json files from inside &lt;code>.storage&lt;/code>. I deleted everything that was generated by home assistant as I was working out my routing system and put the copied files in their place. Then I restarted home-assistant and manually set up all UI based integrations. This took minutes, and other that needing to clear browser cache and re-setup our mobile apps it was pretty painless.&lt;/p>
&lt;h2 id="updates">Updates&lt;/h2>
&lt;p>My Home Assistant doesn&amp;rsquo;t use their handy
&lt;a href="https://www.home-assistant.io/integrations/default_config/" target="_blank">default_config&lt;/a> because I don&amp;rsquo;t like having autodiscovery turned on. The downside to doing things manually is that I miss out on new developments that are normally added to this &lt;code>default_config&lt;/code> alias.&lt;/p>
&lt;p>So I went in and added some of the things I&amp;rsquo;ve missed out on since I last did a major update including
&lt;a href="https://www.home-assistant.io/integrations/my/" target="_blank">my&lt;/a> and
&lt;a href="https://www.home-assistant.io/integrations/stream/" target="_blank">stream&lt;/a>. Then I cleaned up some other messes here and there as well.&lt;/p>
&lt;h1 id="aftermath">Aftermath&lt;/h1>
&lt;p>Very minor things were broken by my brute force migration.&lt;/p>
&lt;p>I ran into 2 devices whose names had changed at somepoint (on the hardware) but which had their old names cached in my old install. I had to go into one script, one automation, and a couple lovelace cards to update things to the correct (newer) name.&lt;/p>
&lt;p>Because I didn&amp;rsquo;t copy over anything from auth we had to clear our browser caches and re-setup our mobile apps.&lt;/p>
&lt;h1 id="coming-next">Coming next&lt;/h1>
&lt;p>I&amp;rsquo;m currently writing a very basic DR script in python. Honestly I&amp;rsquo;m doing it manly to play with Github Copilot. Then I think I want to start playing with
&lt;a href="https://grafana.com/docs/grafana/latest/datasources/influxdb/" target="_blank">Influxdb and Grafana&lt;/a> to visualize some of my home assistant data.&lt;/p>
&lt;p>Hopefully I don&amp;rsquo;t run out of RAM, an upgrade isn&amp;rsquo;t in the budget.&lt;/p></description></item><item><title>MrHomn</title><link>https://dereksrose.com/posts/mrhomn/</link><pubDate>Sun, 27 Jun 2021 15:09:54 -0700</pubDate><guid>https://dereksrose.com/posts/mrhomn/</guid><description>&lt;h1 id="my-new-home-automation-plan">My new home automation plan&lt;/h1>
&lt;figure
style="width: 70%;"
>
&lt;a
data-lightbox="image-/images/mrhomn/mrhomn1.jpg"
href="https://dereksrose.com/images/mrhomn/mrhomn1.jpg"
title=" "
>
&lt;img
src="https://dereksrose.com/images/mrhomn/mrhomn1.jpg"
/>
&lt;/a>
&lt;/figure>
&lt;p>When I decided to leave my job of over 15 years I knew that I wanted a bit of a career rewind. The last several years have seen me in full-time management positions and my programming, sysadmin, and SRE skills have gotten rusty. Since I learn by doing I wanted a project that would get me up-to-date and which I&amp;rsquo;d have fun implementing.&lt;/p>
&lt;p>
&lt;a href="https://github.com/Bishma/MrHomn" target="_blank">MrHomn&lt;/a> is the 3rd generation of my home automation setup&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Which I plan to expand out to utilize common open source tools all operating in a docker-compose stack.&lt;/p>
&lt;h2 id="stack-elements">Stack Elements&lt;/h2>
&lt;figure
style="width: 70%;"
>
&lt;a
data-lightbox="image-/images/mrhomn/diagram.png"
href="https://dereksrose.com/images/mrhomn/diagram.png"
title=" The Planned Tech Stack&amp;amp;hellip; vaguely"
>
&lt;img
src="https://dereksrose.com/images/mrhomn/diagram.png"
/>
&lt;/a>
&lt;figcaption>
The Planned Tech Stack&amp;hellip; vaguely
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="synology">Synology&lt;/h3>
&lt;p>I&amp;rsquo;ll be using my
&lt;a href="https://www.synology.com/en-us" target="_blank">Diskstation&lt;/a> as my storage pool, docker host, and backup agent.&lt;/p>
&lt;h3 id="hass">hass&lt;/h3>
&lt;p>
&lt;a href="https://www.home-assistant.io/" target="_blank">Home Assistant&lt;/a> is the brain of the setup. It provides the UI&amp;rsquo;s, device integrations, data recording, state tracking, events, and more.&lt;/p>
&lt;h3 id="sql_db">sql_db&lt;/h3>
&lt;p>I&amp;rsquo;ve gone with
&lt;a href="https://mariadb.org/" target="_blank">MariaDB&lt;/a> for now. Home Assistant makes use of
&lt;a href="https://www.sqlalchemy.org/" target="_blank">SQLAcadamy&lt;/a> which opens up a lot of DB options. At some point I may have more specific needs but for now the versatility of MariaDB seems like a good choice.&lt;/p>
&lt;h3 id="appdaemon">appdaemon&lt;/h3>
&lt;p>
&lt;a href="https://appdaemon.readthedocs.io/en/latest/" target="_blank">AppDaemon&lt;/a> is a great way to incorporate loosely coupled Python apps with home assistant. Most critically this is how I&amp;rsquo;ll be creating my APIs to Home Assistant. My existing alexa skill connects to an
&lt;a href="https://appdaemon.readthedocs.io/en/latest/AD_API_REFERENCE.html#alexa" target="_blank">appdaemon api&lt;/a> which makes use of &lt;code>sql_db&lt;/code>.&lt;/p>
&lt;h3 id="nginx">nginx&lt;/h3>
&lt;p>Initially, at least, I&amp;rsquo;m going to need a public API to support my Alexa skill.
&lt;a href="https://www.nginx.com/" target="_blank">Nginx&lt;/a> is how I&amp;rsquo;ll be handling internal and external routing within my stack.&lt;/p>
&lt;h2 id="near-future-goals">Near Future Goals&lt;/h2>
&lt;h4 id="monitoring">Monitoring&lt;/h4>
&lt;p>I&amp;rsquo;m currently weighing
&lt;a href="https://prometheus.io/" target="_blank">Prometheus&lt;/a> vs
&lt;a href="https://www.zabbix.com/" target="_blank">Zabbix&lt;/a>. I&amp;rsquo;d learn more implementing Prometheus but it&amp;rsquo;s overkill for this project.&lt;/p>
&lt;h4 id="log-management">Log Management&lt;/h4>
&lt;p>TBD, but I&amp;rsquo;m leaning toward
&lt;a href="https://hub.docker.com/r/graylog/graylog" target="_blank">Greylog&lt;/a>.&lt;/p>
&lt;h4 id="rum-and-synthetics">RUM and Synthetics&lt;/h4>
&lt;p>This is running on my local network. I&amp;rsquo;m not going to have enough traffic for these to be of any use but it is one of the things I&amp;rsquo;d like to grain some practical experience with. ¯\_(ツ)_/¯&lt;/p>
&lt;h3 id="data-analysis">Data Analysis&lt;/h3>
&lt;h4 id="timeseries_db">timeseries_db&lt;/h4>
&lt;p>SQL is well and good, but if you want to evaluate trends you want to be able to query for timeseries data. I am planning to use
&lt;a href="https://www.influxdata.com/" target="_blank">InfluxDB&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;d&amp;rsquo; likely make use of InfluxDB as the storage backend for Prometheus.&lt;/p>
&lt;h4 id="grafana">Grafana&lt;/h4>
&lt;p>
&lt;a href="https://grafana.com/" target="_blank">Grafana&lt;/a> is a solid visualization platform that is common use. Understanding it at more than basic level will pay dividends.&lt;/p>
&lt;h3 id="purpose-built-sensors">Purpose built sensors&lt;/h3>
&lt;p>It has been decades since I did anything with hobbyist electronics and I intend to make the time to relearn it. I intend to use ESP modules and simple sensors anywhere I can figure out how to power them. I&amp;rsquo;d like to sample the temp and humidity in each space of my house. I&amp;rsquo;d like to add CO&lt;sub>2&lt;/sub>, Lux, dB, and in key areas. And I also want some manner particulate sensor(s) in my attic due to local wildfires. For added fun I can 3D Print each sensors&amp;rsquo; housing.&lt;/p>
&lt;figure
style="width: 60%;"
>
&lt;a
data-lightbox="image-/images/mrhomn/arduino-example.png"
href="https://dereksrose.com/images/mrhomn/arduino-example.png"
title=" Photo from"
>
&lt;img
src="https://dereksrose.com/images/mrhomn/arduino-example.png"
/>
&lt;/a>
&lt;figcaption>
&lt;a href="https://www.circuitbasics.com/how-to-set-up-the-dht11-humidity-sensor-on-an-arduino/" target="_blank">Photo from&lt;/a>
&lt;/figcaption>
&lt;/figure>
&lt;p>Additionally I&amp;rsquo;m planning to build an RPi based outdoor weather station.&lt;/p>
&lt;h4 id="esphome">ESPHome&lt;/h4>
&lt;p>Those purpose built sensors have to tell someone what they sense. That someone is
&lt;a href="https://github.com/esphome/esphome" target="_blank">ESPHome&lt;/a> which I plan to deploy in the
&lt;a href="https://hub.docker.com/r/esphome/esphome" target="_blank">docker&lt;/a> stack.&lt;/p>
&lt;h3 id="telegram-chatbot">Telegram Chatbot&lt;/h3>
&lt;p>My goal is to be able to duplicate a natural language interface for both voice assistants and telegram. Telegram has the extra benefit of being able to present options as buttons.&lt;/p>
&lt;h3 id="no-hardware-requiring-the-cloud">No hardware requiring the cloud&lt;/h3>
&lt;p>I&amp;rsquo;ve got a number of devices in my current home automation that require a cloud provider. I want to limit, if not eliminate this weakness. First it means that if the internet is out then my house is degraded. It means that I&amp;rsquo;m reliant on these companies to keep their services online and open enough for home assistant integrations to work with them. Also, I want my data and I want to stop giving so much of it away. Frankly I don&amp;rsquo;t think any of these companies properly compensate us for the wealth of data we expose.&lt;/p>
&lt;h4 id="voice-assistant">Voice Assistant&lt;/h4>
&lt;p>The little bit of research that I&amp;rsquo;ve done so far suggests that the weak point in the realm of open/local voice assistants is wake work detection. Every time an OSS project starts to get close it gets snapped up by companies looking to compete with Amazon and Google.&lt;/p>
&lt;p>All of that is to say that I want to replace Alexa. I&amp;rsquo;ll be doing various experiments to see how viable it is.&lt;/p>
&lt;h4 id="doorbell">Doorbell&lt;/h4>
&lt;p>I&amp;rsquo;m hearing that the
&lt;a href="https://amcrest.com/smarthome-2-megapixel-wireless-doorbell-security-camera-1920-x-1080p-wifi-doorbell-camera-ip55-weatherproof-two-way-audio-ad110.html" target="_blank">Amcrest wifi doorbell&lt;/a> is decent hardware with a terrible app to back it up. But it has the big plus of not being cloud based. I can mimic alerting with Home Assistant + Telegram Bot, unfortunately that won&amp;rsquo;t replicate intercom functionality. There&amp;rsquo;s enough chance that we won&amp;rsquo;t be happy with the end result that I&amp;rsquo;m not willing to spend the money on one yet.&lt;/p>
&lt;p>We have a couple Amcrest PTZ cameras connected to home assistant via
&lt;a href="https://www.synology.com/en-us/surveillance" target="_blank">Synology Surveillance Station&lt;/a>.&lt;/p>
&lt;h3 id="pytorch">PyTorch&lt;/h3>
&lt;h4 id="nvidia-jetson">Nvidia Jetson&lt;/h4>
&lt;p>This is a very affordable device that should be capable of keeping up with the tiny amount of learning and inference I&amp;rsquo;ll &amp;ldquo;need&amp;rdquo; for my house.&lt;/p>
&lt;h4 id="face-detection">Face detection&lt;/h4>
&lt;p>If we have non-cloud door cams I can have MrHome only send notifications if it identifies a human in the camera&amp;rsquo;s view when a motion detection triggers, avoiding some false positives. And if I can get it to recognize &lt;del>my many enemies&lt;/del> friends then I can &lt;del>launch countermeasures&lt;/del> play harp music&amp;hellip; or something.&lt;/p>
&lt;h4 id="routine-detection">Routine Detection&lt;/h4>
&lt;p>This is a half-baked idea at this point; I&amp;rsquo;d like to have MrHomn be able to do something like:&lt;/p>
&lt;ul>
&lt;li>Detect a recurring change to my day-to-day routine&lt;/li>
&lt;li>Generate an automation change proposal based on the new behavior&lt;/li>
&lt;li>Send a Telegram message to suggest the change&lt;/li>
&lt;li>Implement the change if approved&lt;/li>
&lt;/ul>
&lt;p>E.g. &amp;ldquo;I&amp;rsquo;ve noticed you&amp;rsquo;re going to bed later recently. Would you like me to delay your pre-bedtime automation by 30 minutes?&amp;rdquo;&lt;/p>
&lt;hr>
&lt;figure
style="width: 60%;"
>
&lt;a
data-lightbox="image-/images/mrhomn/mrhomn2.jpg"
href="https://dereksrose.com/images/mrhomn/mrhomn2.jpg"
title=" "
>
&lt;img
src="https://dereksrose.com/images/mrhomn/mrhomn2.jpg"
/>
&lt;/a>
&lt;/figure>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>OK, yes, I promised, after naming my second home automation repo &amp;ldquo;
&lt;a href="https://github.com/Bishma/home-assistant-tng" target="_blank">HomeAssistant TNG&lt;/a>,&amp;rdquo; that I&amp;rsquo;d name my next one &amp;ldquo;Deep Space Nine.&amp;rdquo; But
&lt;a href="https://memory-alpha.fandom.com/wiki/Homn" target="_blank">MrHomn&lt;/a> was too good to pass up.&lt;/p>
&lt;p>He was
&lt;a href="https://memory-alpha.fandom.com/wiki/Lwaxana_Troi" target="_blank">Lwaxana Troy&amp;rsquo;s&lt;/a> very diligent valet in Star Trek TNG, three syllable wake words tend to work best for VUIs,
&lt;a href="https://en.wikipedia.org/wiki/Carel_Struycken" target="_blank">Carel Struycken&lt;/a> is awesome, and Homn is a homonym of home (at least the way Lwaxana pronounced it).&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Codename: Bad Janet</title><link>https://dereksrose.com/posts/codename-bad-janet/</link><pubDate>Sun, 03 Nov 2019 11:11:53 -0800</pubDate><guid>https://dereksrose.com/posts/codename-bad-janet/</guid><description>&lt;h1 id="a-better-alexa-skill">A Better Alexa Skill&lt;/h1>
&lt;p>In 2016 I was given a 1st gen Echo Dot and I immediately sought to integrate it with
&lt;a href="https://www.home-assistant.io/" target="_blank">Home Assistant&lt;/a>. The quick way to so at the time was via the Philips Hue Bridge which allowed simple on/off control of devices. Over time more of my home was being controlled by Home Assistant and just turning things on and off wasn&amp;rsquo;t enough.&lt;/p>
&lt;p>I could achieve most of what I wanted using custom intent scripts. This allowed me to have nicer grammar when interacting with things like my media center, gave me the ability to pass variables to Home Assistant (like &amp;ldquo;turn up the volume &lt;em>two times&lt;/em>&amp;rdquo;), and allowed me to get
&lt;a href="https://www.home-assistant.io/docs/configuration/templating/" target="_blank">jinja templated&lt;/a> responses. Fast forward to 2019 and I think you can do most, if not all, of this with
&lt;a href="https://www.nabucasa.com/" target="_blank">Nabu Casa&lt;/a> + template sensors + Alexa routines. But at the time it was the most direct means to get what I wanted.&lt;/p>
&lt;p>Now I want more. I want to be able to do fallbacks, have multi-step intents, do slot confirmations, and just generally have a good VUI. The most personally interesting way to approach this is to learn python and make use of
&lt;a href="https://appdaemon.readthedocs.io/en/latest/" target="_blank">AppDaemon&lt;/a> to build a full featured Alexa API. I&amp;rsquo;ll take a stepwise approach to achieving this, starting with trying to feature match my existing system with a few needed upgrades.&lt;/p>
&lt;h2 id="minimum-viable-product">Minimum Viable Product&lt;/h2>
&lt;h3 id="on--off-for-all-devices">On / Off For All Devices&lt;/h3>
&lt;p>This was an interesting and entirely unnecessary problem to solve. We can do this outside of my skill because we also use Nabu Casa and the home assistant skill. I choose to duplicate the functionality as a personal challenge and because we get into the habit of invoking the skill and forget that the basics aren&amp;rsquo;t part of it.&lt;/p>
&lt;p>This presented the problem of needing to get a device registry to Alexa. I didn&amp;rsquo;t want to have to hard-code any devices into my intent slots and
&lt;a href="https://developer.amazon.com/docs/smapi/catalog-url-reference.html" target="_blank">Catalog Management&lt;/a> was more involved than I wanted to get for something only a couple people will use. I understand there are additional options if you make a skill that&amp;rsquo;s the &amp;ldquo;home automation&amp;rdquo; type but I didn&amp;rsquo;t investigate that very far because those need to be hosted in AWS Lambda, and I want to keep things local.&lt;/p>
&lt;p>In the end I used a Search Query slot and then have my AppDaemon app search Home Assistant for the unbounded phrase. This will be the first place that I want to add validation and/or confirmation. Here is what is is able to search and control.&lt;/p>
&lt;h4 id="example-phrases">Example Phrases&lt;/h4>
&lt;ul>
&lt;li>turn/switch {device} on&lt;/li>
&lt;li>turn/switch {device} off&lt;/li>
&lt;/ul>
&lt;p>Where {device} can be:&lt;/p>
&lt;ul>
&lt;li>All smart switches&lt;/li>
&lt;li>All smart lights&lt;/li>
&lt;li>All groups
&lt;ul>
&lt;li>Fixtures with multiple bulbs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The living room media center
&lt;ul>
&lt;li>Turns on by starting the Plex activity in Harmony.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The living room stand fan
&lt;ul>
&lt;li>Toggle&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Bedroom AC
&lt;ul>
&lt;li>Toggle&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="dynamic-updown">Dynamic Up/Down&lt;/h3>
&lt;p>Turn things up or down by a dynamic amount. This will default to 1 if no value is specified.&lt;/p>
&lt;h4 id="example-phrases-1">Example Phrases&lt;/h4>
&lt;ul>
&lt;li>turn {device} up&lt;/li>
&lt;li>turn {device} down twice&lt;/li>
&lt;li>turn {device} up by {increment}.&lt;/li>
&lt;/ul>
&lt;p>Where {device} can be:&lt;/p>
&lt;ul>
&lt;li>The TV
&lt;ul>
&lt;li>A.K.A. The Bose Soundbar&lt;/li>
&lt;li>Synonyms: The Television, The Volume, The Television Volume&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Fan
&lt;ul>
&lt;li>This is the living room stand fan (if out).&lt;/li>
&lt;li>Speed only goes up, then loops to the beginning after the highest speed.&lt;/li>
&lt;li>Synonyms: The Stand Fan, The Living Room Fan&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Thermostat
&lt;ul>
&lt;li>Synonyms: The Heat, Ecobee&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The Bedroom AC
&lt;ul>
&lt;li>This will only work if the AC is already turned on and I don&amp;rsquo;t currently have a state detection for it.&lt;/li>
&lt;li>Synonyms: The Bedroom Air Conditioner, The Bedroom AC Temperature, The Bedroom Air Conditioned Temperature&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Increment can be any integer value (though I will probably add bounds to this)&lt;/p>
&lt;h3 id="media-control">Media control&lt;/h3>
&lt;p>Control the base functions of the media center. These can all be triggered any number of more time. These won&amp;rsquo;t work for the record player or &amp;ldquo;over the air.&amp;rdquo;&lt;/p>
&lt;h4 id="example-phrases-2">Example phrases:&lt;/h4>
&lt;p>These will all work followed by &amp;ldquo;the tv,&amp;rdquo; &amp;ldquo;,the television&amp;rdquo;, or &amp;ldquo;the living room tv / television.&amp;rdquo;&lt;/p>
&lt;ul>
&lt;li>{action} the television&lt;/li>
&lt;li>{action} the tv twice.&lt;/li>
&lt;li>{action} the tv {increment} times&lt;/li>
&lt;/ul>
&lt;p>Where {action} can be:&lt;/p>
&lt;ul>
&lt;li>Confirm
&lt;ul>
&lt;li>Synonyms: Okay, Yes, Go&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Fast forward (10 seconds)
&lt;ul>
&lt;li>Synonyms: Go Forward, Skip Ahead&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Rewind (also 10 seconds)
&lt;ul>
&lt;li>Synonyms: Go Backward, Go Backwards&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Play
&lt;ul>
&lt;li>Synonym: Unpause&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Pause&lt;/li>
&lt;li>Stop
&lt;ul>
&lt;li>Synonyms: Back, Cancel&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Skip Back (1 minute)
&lt;ul>
&lt;li>ToDo: This will work whether followed by &amp;ldquo;tv&amp;rdquo; or &amp;ldquo;television&amp;rdquo; or not.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="media-switch">Media Switch&lt;/h3>
&lt;p>Switching between Harmony activities.&lt;/p>
&lt;h4 id="example">Example&lt;/h4>
&lt;ul>
&lt;li>Switch to {activity}&lt;/li>
&lt;li>Change to {activity}&lt;/li>
&lt;li>Make {activity} go now&lt;/li>
&lt;/ul>
&lt;p>Where {activity} can be:&lt;/p>
&lt;ul>
&lt;li>Amazon
&lt;ul>
&lt;li>Synonym: Amazon Prime&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Hulu&lt;/li>
&lt;li>Kodi&lt;/li>
&lt;li>Over the Air
&lt;ul>
&lt;li>Synonyms: OTA, Antenna&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Plex&lt;/li>
&lt;li>Record Player
&lt;ul>
&lt;li>Synonyms: Records, Bluetooth,&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Spotify
&lt;ul>
&lt;li>Synonyms: Music&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Switch
&lt;ul>
&lt;li>Synonyms: Nintendo, Nintendo Switch, Console&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Sling&lt;/li>
&lt;li>Netflix&lt;/li>
&lt;/ul>
&lt;h3 id="command-phrases">Command Phrases&lt;/h3>
&lt;p>There are certain things we want to be able to trigger without a slot. These have analogs that as Alexa Routines but are also avilable in the skill because we often forget.&lt;/p>
&lt;h4 id="phrases">Phrases&lt;/h4>
&lt;ul>
&lt;li>skip back
&lt;ul>
&lt;li>Is also a media command, so &amp;ldquo;skip back the tv&amp;rdquo; will also work.&lt;/li>
&lt;li>Performs a 60 second rewind in all video based Harmony activities.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="the-project">The Project&lt;/h2>
&lt;p>It&amp;rsquo;s not very sophistocated yet, so it&amp;rsquo;s all in
&lt;a href="https://github.com/Bishma/home-assistant-tng/blob/master/appdaemon/apps/alexa.py" target="_blank">this one appdaemon app&lt;/a>.&lt;/p></description></item><item><title>Appdaemon Logging</title><link>https://dereksrose.com/posts/appdaemon-logging/</link><pubDate>Mon, 22 Jul 2019 18:33:18 -0800</pubDate><guid>https://dereksrose.com/posts/appdaemon-logging/</guid><description>&lt;h1 id="combined-logging-between-home-assistant-and-appdaemon">Combined logging between Home Assistant and AppDaemon&lt;/h1>
&lt;p>I&amp;rsquo;ve begun using
&lt;a href="https://appdaemon.readthedocs.io/en/latest/" target="_blank">AppDaemon&lt;/a> apps to extend
&lt;a href="https://www.home-assistant.io/" target="_blank">Home Assistant&lt;/a>. It&amp;rsquo;s a way to write sandboxed
&lt;a href="https://www.python.org/" target="_blank">Python&lt;/a> apps that have access to
&lt;a href="https://www.home-assistant.io/" target="_blank">home-assistant&lt;/a> events, devices, services, and presence. It&amp;rsquo;s intended to be replacement for automations that can leverage all the power of python. You can also use it as a way to create sensors in Home Assistant.&lt;/p>
&lt;p>My
&lt;a href="https://github.com/Bishma/home-assistant-tng/blob/master/appdaemon/apps/lunch-schedule.py" target="_blank">first foray&lt;/a> into AppDaemon (and the Python Language) makes use of an API we have at work to read our next three lunch menus and turn them into a Home Assistant sensor. If lunch is being served the sensor will contain what&amp;rsquo;s for lunch. There is also an attribute on the sensor containing the next three days&amp;rsquo; menus. I then wrote a
&lt;a href="https://github.com/Bishma/custom-lovelace-cards/tree/master/list-item-card" target="_blank">crude custom lovelace card&lt;/a> to display that on my frontend.&lt;/p>
&lt;p>&lt;img src="https://dereksrose.com/images/appdaemon-logging_1-custom-card.png" alt="Custom card displaying attributes from an Appdaemon Sensor">&lt;/p>
&lt;p>In working through this I found that needing to keep track of multiple logs was tedious. And since I&amp;rsquo;m using
&lt;a href="https://www.home-assistant.io/hassio/" target="_blank">Hass.io&lt;/a> with the
&lt;a href="https://github.com/hassio-addons/addon-log-viewer" target="_blank">LogViewer&lt;/a> addon, I&amp;rsquo;d like my AppDaemon app logs to be visible there. After a lucky find in the
&lt;a href="https://community.home-assistant.io/t/adding-logs-from-appdaemon-to-the-main-home-assistant-log/105722" target="_blank">Home Assistant Forums&lt;/a> I was able to piece together what I wanted.&lt;/p>
&lt;h4 id="step-1">Step 1:&lt;/h4>
&lt;p>I need to use the home assistant
&lt;a href="https://www.home-assistant.io/integrations/python_script/" target="_blank">python script component&lt;/a> to expose a generic logging service. I can use the resulting service in AppDaemon to pass logs into Home Assistant for logging.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;No message provided&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Send to the appropriate log level&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">received_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;level&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">received_level&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;debug&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">received_level&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;warning&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">warning&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">elif&lt;/span> &lt;span class="n">received_level&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This accepts a message and an optional level. If no level is passed it logs as INFO. This is saved in &lt;code>&amp;lt;config&amp;gt;/python_scripts/log.py&lt;/code>. Once this is added (and Home Assistant restarted with the python script component enabled) I have a service called &lt;code>python_script.log&lt;/code>.&lt;/p>
&lt;h4 id="step-2">Step 2&lt;/h4>
&lt;p>Fine grained
&lt;a href="https://www.home-assistant.io/components/logger/" target="_blank">logger&lt;/a> configs allow me to keep my Home Assistant logs outputting at my desired level (warning) while allowing me to turn things that come through my new &lt;code>python_script.log&lt;/code> service all the way to debug when I&amp;rsquo;m developing a new AppDaemon app.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># &amp;#34;The logger component lets you define the level of logging activities in Home Assistant.&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># https://www.home-assistant.io/components/logger/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">logger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">homeassistant.components.python_script.log.py&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">debug&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each call to the &lt;code>python_script.log&lt;/code> service will generate a log at the info level. Having a default log level of warning here has the benefit of not showing my all my AppDaemon logs twice.&lt;/p>
&lt;h4 id="step-3">Step 3&lt;/h4>
&lt;p>AppDaemon has the means to register a listener on all calls to self.log in all running AppDaemon apps. To do this you want to set up a stand-alone log handling AppDaemon app.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">appdaemon.plugins.hass.hassapi&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">hass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">LogBridge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hass&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Hass&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listen_log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cb&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">cb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ts&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">level&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">msg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;[AppDaemon] &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call_service&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;python_script/log&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">level&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The callback (&lt;code>cb&lt;/code>) formats a message for readability and then passes that and the level to the Home Assistant &lt;code>python_script.log&lt;/code> service created above. Save this in the apps directory as &lt;code>log_bridge.yaml&lt;/code>.&lt;/p>
&lt;h4 id="step-4">Step 4&lt;/h4>
&lt;p>Register this script as an AppDaemon app in &lt;code>apps.yaml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">log_bridge&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">module&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">log_bridge&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">class&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">LogBridge&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After a reboot every log line from AppDaemon pipes into home assistant.&lt;/p></description></item><item><title>Automated Offsite Snapshots</title><link>https://dereksrose.com/posts/automated-offsite-snapshots/</link><pubDate>Sat, 09 Feb 2019 18:39:04 -0800</pubDate><guid>https://dereksrose.com/posts/automated-offsite-snapshots/</guid><description>&lt;h1 id="adding-home-assistant-to-my-synologydropbox-backup-routine">Adding Home Assistant to My Synology/Dropbox Backup Routine&lt;/h1>
&lt;p>There was a time when I felt comfortable using GitHub as my main backup solution for
&lt;a href="https://www.home-assistant.io" target="_blank">Home Assistant&lt;/a>. I would backup my secrets.yaml via my workstation backup routine (on the rare times that it changed) and I considered the database to be expendable. As Add-Ons have started becoming commonplace and various components have started moving from yaml to integrations I no longer consider this sufficient.&lt;/p>
&lt;p>This solution utilizes the
&lt;a href="https://github.com/carstenschroeder/hassio-addons/tree/master/remote-backup" target="_blank">Remote Backup&lt;/a> addon, my home
&lt;a href="https://www.synology.com" target="_blank">Synology Diskstation NAS&lt;/a> and
&lt;a href="https://www.dropbox.com" target="_blank">Dropbox&lt;/a> via encrypted
&lt;a href="https://www.synology.com/en-us/dsm/feature/hyper_backup" target="_blank">Hyper Backup&lt;/a> tasks.&lt;/p>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;h3 id="durability">Durability&lt;/h3>
&lt;p>We&amp;rsquo;ve grown fond enough of the system that I consider it worth at least 3-2-1 for its backups. The chances of meaningful loss with this configuration is very low.&lt;/p>
&lt;ul>
&lt;li>3+ copies
&lt;ul>
&lt;li>Running in HASS&lt;/li>
&lt;li>Snapshots
&lt;ul>
&lt;li>Previous 3 daily snapshots in Home Assistant&lt;/li>
&lt;li>Previous 14 daily snapshots (above included) in NAS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Backed up to Dropbox
&lt;ul>
&lt;li>Encrypted, versioned, and non-public via Hyperbackup&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>2+ Media
&lt;ul>
&lt;li>Micro-SD (in my Pi)&lt;/li>
&lt;li>SATA Hard Drive (in my NAS)&lt;/li>
&lt;li>Dropbox&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>1 copy offsite
&lt;ul>
&lt;li>&lt;em>See also:&lt;/em> Dropbox&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Obviously my configs are also still in github, further minimizing risk.&lt;/p>
&lt;h3 id="i-want-the-hass-part-to-be-self-contained">I want the HASS part to be self contained&lt;/h3>
&lt;p>If we need to restore from backup, that restore should be everything needed to be up and running again - including the backup routine. To this end I am going to use Hass.io snapshots, the Hass.io remote backup plugin, and vanilla Home Assistant automations.&lt;/p>
&lt;h3 id="database-too">Database Too&lt;/h3>
&lt;p>It&amp;rsquo;s not expendable anymore but also not&amp;hellip; mission critical (yet). I am not doing 3-2-1 here but I am doing a daily offsite backup.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>The Home Assistant device and the Synology Diskstation have network routes and access controls that allow SSH traffic.&lt;/li>
&lt;li>Hypervisor is set up on the Synology Diskstation and configured to use Dropbox.&lt;/li>
&lt;li>There should be a backup folder in the main volume of the Synology with a home assistant subfolder.
&lt;ul>
&lt;li>&lt;code>/volume1/Backups/HomeAssistant/&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="set-up">Set up&lt;/h2>
&lt;h3 id="generate-a-key-pair">Generate A Key Pair&lt;/h3>
&lt;p>A public/private keypair is needed for the remote backup addon (it&amp;rsquo;s also just a good idea). This is best done (saved and securely backed up) somewhere other than the synology.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;hass_backup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I used my workstation; saving them in a backed up directory and in my password manager.&lt;/p>
&lt;h3 id="synology-user">Synology User&lt;/h3>
&lt;ol>
&lt;li>From The Users section of the DSM Control Panel select Create &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_1-user-creation.png" alt="User creation screen from the Synology DSM">&lt;/li>
&lt;li>Make sure the user is in the admin group. As of the time of this writing only admin users are allowed SSH. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_2-groups.png" alt="Group Management screen from the Synology DSM">&lt;/li>
&lt;li>The user should only be given access to two folders: the one where backups are being sent (&lt;code>volume1/Backups/HomeAssistant&lt;/code>) and the &lt;code>homes&lt;/code> directory. If the homes directory doesn&amp;rsquo;t exist it will be created in a later step then it can be given read/write access here. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_3-folder-permissions.png" alt="User permissions screen from the Synology DSM">&lt;/li>
&lt;li>Deny all access to applications &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_4-applications.png" alt="User application access screen from the Synology DSM">&lt;/li>
&lt;/ol>
&lt;h3 id="synology-sshscp">Synology SSH/SCP&lt;/h3>
&lt;ol>
&lt;li>If SSH isn&amp;rsquo;t otherwise on it needs to be enabled. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_5-ssh.png" alt="SSH enabling">
&lt;ol>
&lt;li>Make note of the port.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>In the advanced tab of the Users section of the control panel, scroll to the bottom and enable home directories. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_6-home-directory.png" alt="Enabling Home Directories">
&lt;ol>
&lt;li>If the user home directories weren&amp;rsquo;t previously enabled remember to give the &lt;code>hass_backup&lt;/code> user read/write permissions in the Synology DSM User Control Panel.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Change the home directory in &lt;code>/etc/passwd&lt;/code> to be the &lt;code>homes&lt;/code> directory that the Synology created when home directories were enabled. SSHing in using the synology user is now possible, but there will be an error about not being able chdir into your home directory. This error won&amp;rsquo;t prevent fixing of the problem.
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo vim /etc/passwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>Change &lt;code>/var/services/homes/hass_backup&lt;/code> to &lt;code>/volume1/homes/hass_backup&lt;/code>&lt;/li>
&lt;li>I suspect this would be unnecessary if I had enabled home directories before enabling SSH or creating the hass_backup user but I was disinclined to go back and unwind everything to find out.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>chmod 0750 /volume1/homes/hass_backup&lt;/code>&lt;/li>
&lt;li>At this point it should be possible to ssh into the synology using the hass_backup user&amp;rsquo;s password (without any errors).
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh hass_backup@&amp;lt;synology ip address&amp;gt;:2222
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h4 id="enable-public-key-authentication">Enable Public Key Authentication&lt;/h4>
&lt;p>While logged into the Synology via SSH:&lt;/p>
&lt;ol>
&lt;li>&lt;code>sudo vim /etc/ssh/sshd_config&lt;/code>&lt;/li>
&lt;li>Uncomment these 3 lines
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#RSAAuthentication yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#PubkeyAuthentication yes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#AuthorizedKeysFile .ssh/authorized_keys&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Restart the ssh service
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo synoservicectl --reload sshd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>mkdir ~/.ssh&lt;/code>&lt;/li>
&lt;li>&lt;code>chmod 0750 ~/.ssh&lt;/code>&lt;/li>
&lt;li>&lt;code>vim ~/.ssh/authorized_keys&lt;/code>
&lt;ol>
&lt;li>Paste the contents of the public key generate above into a new line of this file.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>At this point it should be possible to ssh into the synology without entering a password.
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh -i &amp;lt;location of private key&amp;gt; hass_backup@&amp;lt;synology ip address&amp;gt;:2222
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="hass46io-remote-backup-plugin">Hass.io remote backup plugin&lt;/h3>
&lt;ol>
&lt;li>Add the repository and install the add-on
&lt;a href="https://github.com/carstenschroeder/hassio-addons/tree/master/remote-backup" target="_blank">per its instructions&lt;/a>.&lt;/li>
&lt;li>Configure it with the everything that was just set up. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_7-remote-backup-config.png" alt="Remote Backup Creation Screen">&lt;/li>
&lt;/ol>
&lt;p>At this point it should be able to test that backups are being sent to the Synology via the Developer Tools Service panel. It will take a few minutes to perform the backup after the service call is made. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_8-service-test.png" alt="Service Test Example">&lt;/p>
&lt;h3 id="automation">Automation&lt;/h3>
&lt;p>This automation is taken directly from the remote backup add-on docs. The time was changed and the id was added.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">daily-backup&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alias&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Daily Backup at 00:30&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">trigger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">time&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">at&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;00:30:00&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">action&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hassio.addon_start&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">data&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">addon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">954f2f4e_remote_backup&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="hyper-backup">Hyper Backup&lt;/h3>
&lt;p>The hyper backup job is pretty simple. Backup the &lt;code>HomeAssistant&lt;/code> folder and the MariaDB application (which at the time of this writing is only used by Home Assistant).&lt;/p>
&lt;ol>
&lt;li>Create a new &amp;ldquo;data backup task&amp;rdquo; with Dropbox as its destination. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_9-create-backup-task.png" alt="Backup Destination Window">&lt;/li>
&lt;li>A new browser window will open to grant Hyper Backup dropbox permissions. Allow them.&lt;/li>
&lt;li>Select the Dropbox folder to send to (&lt;code>SynoBackups&lt;/code>) and what the and what to call within that folder (&lt;code>HomeAssistant&lt;/code>). &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_10-dropbox-setup.png" alt="Backup Destination Screen">&lt;/li>
&lt;li>Select the Synology folder to back up from the &amp;ldquo;Data Backup&amp;rdquo; screen. &lt;code>Backups &amp;gt; HomeAssistant&lt;/code>&lt;/li>
&lt;li>Select the MariaDB 10 from the &amp;ldquo;Application Backup&amp;rdquo; screen.&lt;/li>
&lt;li>Set the backup task settings. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_11-task-settings.png" alt="Backup Setting Screen">
&lt;ol>
&lt;li>The password for this backup is stored in my password manager.&lt;/li>
&lt;li>At the end of the wizard you will be prompted to have the backup&amp;rsquo;s encryption key. The backup can be accessed using either the password or the key. If both are kept safe then at lest one should be available when needed.&lt;/li>
&lt;li>I chose a Hyper Backup time sufficiently after my Home Assistant backup automation.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Choose a rotation schedule. I keep a smart rotation with 128 versions.&lt;/li>
&lt;li>At the end of the wizard, after saving the backup&amp;rsquo;s encryption key, there is an option to back up now.
&lt;ol>
&lt;li>This will be the last thing to test.&lt;/li>
&lt;li>Note: Backing up Maria DB will make it briefly unavailable.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="clean-up">Clean Up&lt;/h2>
&lt;p>My snapshots are only about 50M, but I still don&amp;rsquo;t have a reason to keep them all. I am going to prune all local backups older than 14 days.&lt;/p>
&lt;ol>
&lt;li>Create a User Defined Script under Scheduled Tasks &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_12-scheduled-task-creation.png" alt="Scheduled Task Creation Screen">&lt;/li>
&lt;li>The task should run as the backup user. Name it descriptively. I set a scheduled task using the administer account but run the task as the hass backup user. &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_13-task-settings.png" alt="Task Creation Screen - General Tab">&lt;/li>
&lt;li>In the schedule tab choose daily at an time.&lt;/li>
&lt;li>Under task settings set notification settings for abnormal terminations. The script to run is a linux find command with delete flag &lt;br>
&lt;img src="https://dereksrose.com/images/automated-offsite-snapshots_14-task-creation-general.png" alt="Task Creation Screen - Task Settings Tab"> &lt;br>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find /volume1/Backups/HomeAssistant/ -type f -mtime +14 -delete
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That change to the home directory at the beginning of this script bypasses a bug currently in syology with non-admin user scripts. Without that the script will throw a permission error.&lt;/p></description></item><item><title>NWS Alerts</title><link>https://dereksrose.com/posts/nws-alerts/</link><pubDate>Sun, 18 Nov 2018 19:47:48 -0800</pubDate><guid>https://dereksrose.com/posts/nws-alerts/</guid><description>&lt;h1 id="31-weather-alerts-sent-to-telegram-via-home-assistant">3.1 Weather Alerts sent to Telegram via Home Assistant&lt;/h1>
&lt;p>&lt;strong>Updated 2018-11-20&lt;/strong>&lt;/p>
&lt;p>User &lt;em>finity&lt;/em> on the Home Assistant Forums
&lt;a href="https://community.home-assistant.io/t/severe-weather-alerts-from-the-us-national-weather-service/71853/11" target="_blank">posted a some REST sensors&lt;/a> for getting National Weather Service alerts from home assistant. I took this idea (and copy and pasted their
&lt;a href="https://www.home-assistant.io/components/sensor.rest/" target="_blank">REST sensor&lt;/a>) to use as an automation that will send me alerts via Telegram. As &lt;em>finity&lt;/em> points out, this is a nice way to insulate you from the possible shutdown the of the Weather Underground API. It&amp;rsquo;s also a fun use of a valuable public API. &lt;strong>Note:&lt;/strong> The National Weather Service APIs are only available for US locations.&lt;/p>
&lt;p>&lt;em>finity&amp;rsquo;s&lt;/em> implementation is much more involved than mine and includes their Echos vocalizing the the weather alert. You should
&lt;a href="https://community.home-assistant.io/t/severe-weather-alerts-from-the-us-national-weather-service/71853/11" target="_blank">check it out&lt;/a>.&lt;/p>
&lt;p>&lt;img src="https://dereksrose.com/images/NWS-Alerts_1-telegram-example.png" alt="Example of the NWS Alert Text sent through Telegram.">&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>At this point I have already set up a Telegram bot named Janet (same as the invocation for my alexa skill) as &lt;code>notification.general&lt;/code>. That was set up using the
&lt;a href="https://www.home-assistant.io/components/notify.telegram/" target="_blank">notification component&amp;rsquo;s docs&lt;/a>.&lt;/p>
&lt;h2 id="sensors">Sensors&lt;/h2>
&lt;p>Two REST sensors are used to pull from Nation Weather Service APIs.&lt;/p>
&lt;p>The first looks for the total number of alerts in my area.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-YAML" data-lang="YAML">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">resource&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://api.weather.gov/alerts/active/count&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NWS Alert Count&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">value_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% if value_json.zones.ORZ604 is defined %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {{ value_json.zones.ORZ604 | int }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% elif value_json.zones.ORC039 is defined %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {{ value_json.zones.ORC039 | int }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% else %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% endif %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">headers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">User-Agent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Homeassistant&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">Accept&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">application/ld+json&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">scan_interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">300&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This looks for alerts in my zone &lt;code>ORZ604&lt;/code>, failing that it looks for alerts in my county &lt;code>ORC039&lt;/code>, failing that it sets a value of 0 (zero). I have this set to update every 300 seconds (5 minutes). You can find your zone and county IDs on
&lt;a href="https://alerts.weather.gov/" target="_blank">this page&lt;/a>.&lt;/p>
&lt;p>The second sensor requests the actual alert data from my zone and county and feeds any existing value into its sensor attributes under &lt;code>features&lt;/code>. If there is no data, then the attribute is set to None. This has the limitation of only setting the first alert in the area to the sensor&amp;rsquo;s state, but at the moment I&amp;rsquo;m not using the state anyway. The full features array is stored to the sensor&amp;rsquo;s attributes, so I can loop through all events in my automation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-YAML" data-lang="YAML">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">resource&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://api.weather.gov/alerts/active?zone=ORZ604,ORC039&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NWS Alert Event&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">value_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% if value_json.features[0] is defined %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {{ value_json[&amp;#39;features&amp;#39;][0][&amp;#39;properties&amp;#39;].event }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% else %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> None
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% endif %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">json_attributes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">features&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">headers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">User-Agent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Homeassistant&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">Accept&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">application/geo+json&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">scan_interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">300&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="automation">Automation&lt;/h2>
&lt;p>The automation uses a template condition to handle any change that results in a count from the first sensor that is greater than 0 (zero). If true and if this automation has not beed triggered in the last 6 hours then we send a notification via the &lt;code>notify.general&lt;/code> service. The first NWS sensors gives a handy integer to use in for range. My message template starts with a fun header (chipper voice of doom) and then concatinates all alerts together.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-YAML" data-lang="YAML">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">weather_alert_doooooom&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alias&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NWS Notification Weather Alert&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">trigger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">state&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">entity_id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sensor.nws_alert_count&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">condition&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">condition&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">template&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">value_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{states.sensor.nws_alert_count.state | int &amp;gt; 0}}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">condition&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">template&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">value_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ as_timestamp(now()) | int - as_timestamp(states.automation.nws_notification_weather_alert.attributes.last_triggered) | int &amp;gt; 21600 }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">action&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">data_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">message&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> Hi There,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> I&amp;#39;ve detected a change in national weather service advisories for Eugene.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% for i in range(states(&amp;#39;sensor.nws_alert_count&amp;#39;) | int) %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {%- if i &amp;gt; 0 -%}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> ---------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {%- endif %}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {{ state_attr(&amp;#39;sensor.nws_alert_event&amp;#39;, &amp;#39;features&amp;#39;)[i].properties.headline }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {{ state_attr(&amp;#39;sensor.nws_alert_event&amp;#39;, &amp;#39;features&amp;#39;)[i].properties.description }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> {% endfor %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">notify.general&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="still-to-come">Still to come&lt;/h2>
&lt;p>I don&amp;rsquo;t love that I&amp;rsquo;m just blocking alerts for 6 hours. I get alert fatigue quickly, but I want to know if conditions are deteriorating. But what seems to happen most commonly is that an alert is retracted, then a new alert is issued with minimally updated information.&lt;/p>
&lt;p>I want to add a Lovelace condition card to my outdoor climate tab that will pop up, highlighted, showing that there&amp;rsquo;s an alert. When I set up HTML notifications I may also want to push to that. I&amp;rsquo;m also considering changing the detailed sensor. Right now I like the flexibility of the full data from the API, but I don&amp;rsquo;t think I&amp;rsquo;ll want more than the headline and description.&lt;/p></description></item></channel></rss>